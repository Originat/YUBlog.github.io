<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Fly.io on 静语忆昔</title>
        <link>https://www.alienergy.eu.org/categories/fly.io/</link>
        <description>Recent content in Fly.io on 静语忆昔</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 29 Jul 2022 21:00:00 +0800</lastBuildDate><atom:link href="https://www.alienergy.eu.org/categories/fly.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>使用 PAAS 搭建青龙面板</title>
        <link>https://www.alienergy.eu.org/p/qinglong-paas/</link>
        <pubDate>Fri, 29 Jul 2022 21:00:00 +0800</pubDate>
        
        <guid>https://www.alienergy.eu.org/p/qinglong-paas/</guid>
        <description>前言 因手上的服务器大多数都是短期测试的，并不适合长期运行青龙面板服务，故想到使用 PAAS 容器进行搭建，本文使用Divio、Railway、Fly.io进行搭建，并在搭建过程中遇到的问题作为记录。
简介 青龙面板：支持python3、javaScript、shell、typescript 的定时任务管理面板。
青龙面板有点类似油猴，它是一个脚本管理系统，本身不具有撸羊毛的功能。可以用来挂京东赚点京豆、金币，全当折腾玩吧。
注意 因不同的 PAAS 开放的端口不同（一般都会开放80与443），所以在某些容器中并不能使用傻妞等服务
使用 Divio 搭建 该容器分为 TEST 和 LIVE 两部分，我们直接部署在 LIVE 中
Fork qinglong-paas 项目 注册Divio 创建新的应用，在 NAME 中填写应用名字，在后面会检测应用名字的重复性 选择仓库时，选 CUSTOM 在自己的Fork项目的下复制 SSH 链接 在第4步中选CUSTOM后的弹框中，把复制的 SSH 链接粘贴到 REPOSITORY URL 中,然后复制密钥 把复制的密钥粘贴到Fork项目中，Settings -&amp;gt; Deploy keys -&amp;gt; Add deploy key ，名字随意 回到Divio中，点击CONTINUE 进入新建的Divio项目中，在 LIVE 中的 Env Variables 添加关键字PORT，值为5700 在应用中回到Environments，在 LIVE 中点击 DEPLOY，出现 succeeded后，表示部署完成，点击 ENV URL 就可以打开网站了 使用 Railway 搭建 Tip 从2022年8月1日起，Railway 调整了定价计划，免费用户一个月只能运行500小时</description>
        </item>
        <item>
        <title>使用免费 PAAS 搭建 Alist</title>
        <link>https://www.alienergy.eu.org/p/alist.flyio.alwaysdata/</link>
        <pubDate>Wed, 20 Jul 2022 23:20:00 +0800</pubDate>
        
        <guid>https://www.alienergy.eu.org/p/alist.flyio.alwaysdata/</guid>
        <description>&lt;img src="https://www.alienergy.eu.org/p/alist.flyio.alwaysdata/alist_1.png" alt="Featured image of post 使用免费 PAAS 搭建 Alist" /&gt;简介 Alist：一款支持多种存储的目录文件列表程序，支持 web 浏览与 webdav，后端基于gin，前端使用react。演示地址：https://alist.nn.ci
使用 Fly.io 部署 使用 GitHub Actions 自动部署 先到 Fly.io 注册账号，注意：注册时要记得绑定信用卡，银联的就行 创建 fly 应用程序（app）：fly launch （选择 ams (Amsterdam,Netherlands)） 创建 fly 卷（volume）：flyctl volumes create data --region ams --size 1 Fork alist-fly.io 后，在 Settings -&amp;gt; Secrets -&amp;gt; Actions 中增加 FLY_API_TOKEN、APP_NAME 安全字段 FLY_API_TOKEN - Fly API 接口 Token 值，可访问 https://web.fly.io/user/personal_access_tokens 或在本地执行 flyctl auth token 查看 APP_NAME - 应用名称，注意此名称全局唯一 设置好后，代码自行触发部署，已设置每月十八号八点（UTC）自动部署，可在 .github/workflows/main.yml 中进行修改。
初始密码在 Fly.io 的监控日志中进行查看，Dashboard -&amp;gt; personal -&amp;gt; 应用程序的名字 -&amp;gt; Monitoring</description>
        </item>
        
    </channel>
</rss>
